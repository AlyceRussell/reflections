#~~~~~~~~~~~~~~~~~~~~#
#
# Lesson 1 Reflection
#
#~~~~~~~~~~~~~~~~~~~~#

Q1: How did viewing a diff between two versions of a file help you see the bug
that was introduced?

By using the diff command, the terminal can look at both versions of the file a
the same time and show where differences have occurred.

The command used was "diff -u oldFileName newFileName"


Q2: How could having easy access to the entire history of a file make you a more
efficient programmer in the long term?

Version control would make things easier by allowing me to go back to old
editions and use parts/all of them if I wish.


Q3: What do you think are the pros and cons of manually choosing when to create
a commit, like you do in Git, vs having versions automatically saved, like
Google Docs does?

       Pros: save meaningful notes on commit, more organised, can show
       	     incremental changes to your file
       Cons: may lose changes if you forget to commit


Q4: Why do you think some version control systems, like Git, allow saving
multiple files in one commit, while others, like Google Docs, treat each file
separately?

Google Docs is designed for collaborative work on single documents, whereas Git
is designed to be used for projects, which may contain many different files per
project. These files might be linked together.


Q5: How can you use the commands git log and git diff to view the history of
files?

	git log: allows you to view all the commits, from the most recent
	git diff: allows you to compare to commits to see what changed


Q6: How might using version control make you more confident to make changes
that could break something?

If you were making "risky" changes, you could then access a previous commit and
then edit your HEAD commit accordingly (i.e. revert back to original code)


Q7: Now that you have your workspace set up, what do you want to try use Git
for?

Version control for scripting on my PhD.

